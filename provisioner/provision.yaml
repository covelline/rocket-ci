---
- name: Setup Android Build Machine
  hosts: all
  become: yes
  become_user: root
  tasks:
    - name: Fetch webupd8team
      apt: name=software-properties-common
    - name: Add Java Repository
      apt_repository: repo='ppa:webupd8team/java'
    - name: Set Java Version
      shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
    - name: Install Oracle Java 8
      apt: name=oracle-java8-installer
    - name: Install Dependencies
      command: dpkg --add-architecture i386
    - name: Install gcsfuse
      shell: export GCSFUSE_REPO=gcsfuse-`lsb_release -c -s`; echo "deb http://packages.cloud.google.com/apt $GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list; curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - name: Add new ppt for ruby
      command: apt-add-repository ppa:brightbox/ruby-ng
    - name: Add new gpg key for Docker
      command: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    - name: Add an entry for Docker
      shell: echo deb https://apt.dockerproject.org/repo ubuntu-trusty main > /etc/apt/sources.list.d/docker.list
    - name: Update apt
      command: apt-get update
    - name: Install Dependencies
      apt: name={{ item }}
      with_items:
        - expect
        - git
        - wget
        - libc6-i386
        - lib32stdc++6
        - lib32gcc1
        - lib32ncurses5
        - lib32z1
        - python
        - curl
        - unzip
        - make
        - ruby2.3
        - ruby2.3-dev
        - gcsfuse
        - apt-transport-https
        - ca-certificates
        - linux-image-extra-3.19.0-64-generic
        - docker-engine
        - python-pip
        - dstat
    - name: Install nodejs
      unarchive: src=https://nodejs.org/dist/v6.9.1/node-v6.9.1-linux-x64.tar.xz dest=/usr/local copy=no
    - name: Link to node
      file: >
        src=/usr/local/node-v6.9.1-linux-x64/bin/{{ item }}
        dest=/usr/local/bin/{{ item }}
        state=link
      with_items:
        - node
        - npm
    - name: Upload scripts
      copy: src=../vm-scripts/ dest=/usr/local/scripts
    - name: Add Permission to scripts
      file: mode="u+x" path=/usr/local/scripts/{{ item }}
      with_items:
        - startup.rb
        - shutdown.rb
    - name: Install bundler
      gem: name=bundler state=present user_install=no
    - name: Install dependent gems
      bundler: gemfile=/usr/local/scripts/Gemfile state=present user_install=no
    - name: Create umbilical's directory
      file: path=/usr/local/umbilical state=directory mode=0755
    - name: Install umbilical
      unarchive: src=../umbilical/archive.zip dest=/usr/local/umbilical
    - name: Runnbale umbilical
      file: path=/usr/local/umbilical/bin/umbilical mode=0755
    - name: Setup umbilical
      command:  npm install
      args:
        chdir: /usr/local/umbilical
    - name: Create opt directory
      file: path=/opt state=directory mode=0777
    - name: Fetch Android SDK
      unarchive: src=http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz dest=/opt/ copy=no
    - name: Create Android SDK licenses directory
      file: path=/opt/android-sdk-linux/licenses state=directory mode=0755
    - name: Upload android sdk licens files
      copy: src=files/{{ item }} dest=/opt/android-sdk-linux/licenses/{{ item }}
      with_items:
        - android-sdk-license
        - android-sdk-preview-license
        - intel-android-extra-license
    - name: Upload android_accept script
      copy: src=files/android_accept.sh dest=/opt/android_accept.sh mode="u+x"
    - name: Upload install target sdk list file
      copy: src=files/install_sdk dest=/opt/install_sdk
    - name: Install Android SDK
      shell: /opt/android_accept.sh /opt/android-sdk-linux/tools/android update sdk --all --force --no-ui --filter $(tr '\n' ',' < /opt/install_sdk)
    - name: Install Android NDK
      unarchive: src=https://dl.google.com/android/repository/android-ndk-r12b-linux-x86_64.zip dest=/opt/ copy=no
    - name: Rename Android NDK directory
      command: mv /opt/android-ndk-r12b /opt/android-ndk
    - name: Install docker-py
      pip: name=docker-py version=1.9.0 # ansible 2.1.0 のバグで最新版は指定できない https://github.com/ansible/ansible/issues/17495
    - name: Create Docker work directory
      file: path=/tmp/docker state=directory mode=0755
    - name: Upload Dockerfile
      copy: src=files/Dockerfile dest=/tmp/docker/Dockerfile
    - name: Create Docker image
      docker_image:
        name: android
        path: /tmp/docker
    - name: Create cache filesystem
      shell: dd if=/dev/zero of=/opt/cache.fs bs=1M count=1024;
    - name: Format cache filesystem
      filesystem: dev=/opt/cache.fs fstype=ext4
    - name: Mount cache directory
      mount:
        name: /opt/cache
        src: /opt/cache.fs
        fstype: ext4
        state: present
